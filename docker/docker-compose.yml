
networks:
  default:
    name: 'english_hub'

volumes:
  postgres:
  logs:
  prometheus:
  grafana:

services:
  postgres:
    image: 'postgres:latest'
    container_name: 'postgres'
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: '1111'
      POSTGRES_USER: 'shombal'
      POSTGRES_DB: 'english_hub'
  
  loki:
    container_name: 'loki'
    image: 'grafana/loki:2.9.2'
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
      
  prometheus:
    image: 'prom/prometheus'
    container_name: 'english-hub-prometheus'
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
  
  grafana:
    image: 'grafana/grafana'
    container_name: 'grafana'
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana:/var/lib/grafana
    depends_on: 
      - prometheus
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel, grafana-simple-json-datasource'
  
  jaeger:
    image: 'jaegertracing/all-in-one'
    container_name: 'jaeger'
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - '6831:6831/udp' 
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686' 
      - '4317:4317' 
      - '4318:4318'
      - '14250:14250' 
      - '14268:14268' 
      - '14269:14269' 
      - '9411:9411' 
        
  api:
    build:
      context: ./..
      dockerfile: docker/Dockerfile
    #image: 'english_hub:local'
    container_name: 'english_hub_api'
    ports:
      - '8080:8080'
    environment:
      ASPNET_URLS: 'http://0.0.0.0:8080'
      ConnectionStrings__EnglishHubDbContext: 'Host=postgres;User Id=shombal;Password=1111;Database=english_hub;Port=5432'
      ConnectionStrings__Logs: 'http://loki:3100'
      ConnectionStrings__Tracing: 'http://jaeger:4318/v1/traces'